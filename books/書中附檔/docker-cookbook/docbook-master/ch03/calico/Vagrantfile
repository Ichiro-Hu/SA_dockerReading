# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$consul=<<SCRIPT
apt-get update
apt-get -y install wget
wget -qO- https://experimental.docker.com/ | sh
gpasswd -a vagrant docker
service docker restart
docker run -d -p 8500:8500 -p 8300-8302:8300-8302/tcp -p 8300-8302:8300-8302/udp -h consul progrium/consul -server -bootstrap
SCRIPT

$bootstrap=<<SCRIPT
apt-get update
apt-get -y install wget curl
apt-get -y install bridge-utils
wget -qO- https://experimental.docker.com/ | sh
gpasswd -a vagrant docker
echo DOCKER_OPTS=\\"--default-network=overlay:multihost --kv-store=consul:192.168.33.10:8500 --label=com.docker.network.driver.overlay.bind_interface=eth1 --label=com.docker.network.driver.overlay.neighbor_ip=192.168.33.11\\" >> /etc/default/docker
service docker restart
SCRIPT

$calico=<<SCRIPT
wget -q https://github.com/Metaswitch/calico-docker/releases/download/v0.5.0/calicoctl
chmod +x calicoctl
docker pull calico/node:v0.5.0
docker pull quay.io/coreos/etcd:v2.0.11
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
  num_nodes = 2
  base_ip = "192.168.33."
  net_ips = num_nodes.times.collect { |n| base_ip + "#{n+11}" }

  config.vm.define "consul-server" do |consul|
    consul.vm.box = "ubuntu/trusty64"
    consul.vm.hostname = "consul-server"
    consul.vm.network :private_network, ip: "192.168.33.10"
    consul.vm.provider "virtualbox" do |vb|
     vb.customize ["modifyvm", :id, "--memory", "512"]
    end
    consul.vm.provision :shell, inline: $consul
  end

  num_nodes.times do |n|
    config.vm.define "net-#{n+1}" do |net|
      net.vm.box = "chef/ubuntu-14.10"
      net_ip = net_ips[n]
      net_index = n+1
      net.vm.hostname = "net-#{net_index}"
      net.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--memory", "1024"]
      end
      net.vm.network :private_network, ip: "#{net_ip}"
      net.vm.provision :shell, inline: $bootstrap
      net.vm.provision :shell, inline: $calico

      net.vm.provision :docker do |d|
        d.run "quay.io/coreos/etcd",
          args: "-p 4001:4001 -p 7001:7001",
          cmd: "--name calico#{n} "\
           "--advertise-client-urls http://#{net_ip}:4001 "\
           "--listen-client-urls http://0.0.0.0:4001 "\
           "--initial-advertise-peer-urls http://#{net_ip}:7001 "\
           "--listen-peer-urls http://0.0.0.0:7001 "\
           "--initial-cluster-token etcd-cluster-2 "\
           "--initial-cluster calico0=http://192.168.33.11:7001,calico1=http://192.168.33.12:7001 "\
           "--initial-cluster-state new"
      end

    end
  end

end
