2.1 Keeping Changes Made a Container by Committing to an Image

docker  commit  CONTAINERID  REPO:TAG

docker  diff  CONTAINERID

2.2 Saving Images and Containers as Tar Files for Sharing

docker export CONTAINERID  >  NAME.tar

docker import  NAME.tar  REPO:TAG

docker save  -o update1.tar update

docker load -i update1.tar

跟 docker import 方式不同的是 

 docker load 會遵循之前 image 的 repo與tag 

 但是 docker import 則可以自訂 repo:tag

The two methods are similar; the difference is that saving an image will keep its history, and exporting a container will squash its history.

2.3 Writing Your First Dockerfile

FROM
ENTRYPOINT
CMD

https://github.com/CentOS/CentOS-Dockerfiles

討論:
* 如何一次刪除某個 repo下的所有 images?
---- 暫時用 # docker images| grep  ubuntu | awk '{print $3}'
---- 日後研究 filter

2.4 Packaging a Flask Application Inside a Container

EXPOSE 5000
CMD ["python", "/tmp/hello.py"]

2.5 Optimizing Your Dockerfile by Following Best Practices

2.6 Versioning an Image with Tags

# docker tag  ubuntu:14.04 foobar:cookbook

2.7 Migrating from Vagrant to Docker with the Docker Provider

2.8 Using Packer to Create a Docker Image
Packer
https://www.packer.io/downloads.html

有空可以試試看

{
"builders": [
  {
    "type": "docker",
    "image": "ansible/ubuntu14.04-ansible:stable",
    "commit": "true"
  }
],
"provisioners": [
  {
    "type": "ansible-local",
    "playbook_file": "local.yml"
  }
],
"post-processors": [
   {
     "type": "docker-tag",
     "repository": "how2dock/packer",
     "tag": "ansible"
   }
]
}

2.9 Publishing Your Image to Docker Hub

docker login

~/.docker/config.json

2.10 Using ONBUILD Images

討論:
ONBUILD 用途?
ONBUILD 的作用就是讓指令延遲執行，延遲到下一個使用 FROM 的 Dockerfile 在建置 image 時執行，只限延遲一次。ONBUILD 的使用情境在於建置時取得最新的源碼 (搭配 RUN) 與限定系統框架 ?

2.11 Running a Private Registry

可以參考
https://philipzheng.gitbooks.io/docker_practice/content/repository/local_repo.html


#docker pull registry:2

# docker run -d -p 5000:5000 registry:2

檢查方式
# curl -i http://localhost:5000/v2/

docker push 到私有倉庫 IP或NAME:PORT/REPO:TAG
# docker push 127.0.0.1:5000/busy1:test2

查詢私有倉庫 repo
# curl -i http://localhost:5000/v2/_catalog

查詢某個 repo 相關資訊, busy1 為 reponame, test2 為tag
# curl -i http://localhost:5000/v2/busy1/manifests/test2

列出某個 repo 的 tag
# curl -i http://localhost:5000/v2/busy1/tags/list



